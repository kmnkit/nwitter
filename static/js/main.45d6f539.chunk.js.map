{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","errorMessage","type","placeholder","required","onClick","prev","Auth","provider","onSocialClick","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","nweetDoc","updateDoc","src","width","height","alt","NweetFactory","userObj","attachment","setAttachment","nweet","setNweet","attachmentRef","uid","uuidv4","uploadString","resp","getDownloadURL","addDoc","collection","createdAt","serverTimestamp","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","querySnapshot","nweetArray","docs","map","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAeAA,YAVuB,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,4BACbG,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,cACnBM,MAAON,6CAIJ,IAAMO,EAAcC,cACdC,EAAYC,cACZC,EAAiBC,c,eCiDfC,EA/DE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGiBJ,oBAAS,GAH1B,mBAGZK,EAHY,KAGAC,EAHA,OAION,mBAAS,IAJhB,mBAIZO,EAJY,KAILC,EAJK,KAMbC,EAAW,SAACC,GAAO,IAAD,EAGhBA,EADAC,OAAUC,EAFM,EAENA,KAAMC,EAFA,EAEAA,MAEP,UAATD,EACAV,EAASW,GACO,aAATD,GACPR,EAAYS,IAIdC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAEM,iBADW,UAGLX,EAHK,gCAICY,YACFxB,EAAaQ,EAAOE,GALnB,6CAQCe,YACFzB,EAAaQ,EAAOE,GATnB,yDAaTK,EAAS,KAAMW,cAbN,0DAAH,sDAmBd,OACI,qCACI,uBAAML,SAAUA,EAAhB,UACI,uBACIF,KAAK,QACLQ,KAAK,OACLC,YAAY,QACZC,UAAQ,EACRT,MAAOZ,EACPQ,SAAUA,IAEd,uBACIG,KAAK,WACLQ,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRT,MAAOV,EACPM,SAAUA,IAEd,uBAAOW,KAAK,SAASP,MAAOR,EAAa,iBAAmB,WAC3DE,KAEL,sBAAMgB,QAxBQ,kBAAMjB,GAAc,SAAAkB,GAAI,OAAKA,MAwB3C,SAA+BnB,EAAa,SAAW,uBC9BpDoB,EAvBF,WACT,IAAIC,EACEC,EAAa,uCAAG,WAAOjB,GAAP,eAAAK,EAAA,4DAEL,YADKH,EAAWF,EAArBC,OAAUC,MAEdc,EAAW,IAAIE,IACC,WAAThB,IACPc,EAAW,IAAIG,KALD,SAOZC,YAAgBrC,EAAaiC,GAPjB,2CAAH,sDAUnB,OACI,gCACI,cAAC,EAAD,IACA,gCACI,wBAAQH,QAASI,EAAef,KAAK,SAArC,kCACA,wBAAQW,QAASI,EAAef,KAAK,SAArC,yC,QC2CDmB,EAhED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACPjC,oBAAS,GADF,mBAC9BkC,EAD8B,KACrBC,EADqB,OAELnC,mBAASgC,EAASI,MAFb,mBAE9BC,EAF8B,KAEpBC,EAFoB,KAI/BC,EAAa,uCAAG,sBAAAxB,EAAA,0DACPyB,OAAOC,QAAQ,+CADR,gCAGRC,YAAUC,YAAIhD,EAAW,SAAUqC,EAASY,KAHpC,UAIiB,KAA3BZ,EAASa,cAJC,gCAKJC,YAAaC,YAAIlD,EAAgBmC,EAASa,gBALtC,2CAAH,qDASbG,EAAgB,kBAAMb,GAAW,SAAAX,GAAI,OAAKA,MAC1CV,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,6DACbL,EAAEM,iBACIiC,EAAWN,YAAIhD,EAAW,SAAUqC,EAASY,IAFtC,SAGPM,YAAUD,EAAU,CACtBb,KAAMC,IAJG,OAMbF,GAAW,GANE,2CAAH,sDAcd,OACI,8BACKD,EACG,qCACI,uBAAMpB,SAAUA,EAAhB,UACI,uBACIM,KAAK,OACLC,YAAY,kBACZR,MAAOwB,EACP5B,SAfP,SAACC,GAAO,IAEPG,EACVH,EADAC,OAAUE,MAEdyB,EAAYzB,IAYQS,UAAQ,IAEZ,uBAAOF,KAAK,SAASP,MAAM,oBAE/B,wBAAQU,QAASyB,EAAjB,uBAGJ,qCACI,6BACKhB,EAASI,OAEbJ,EAASa,eACN,qBAAKM,IAAKnB,EAASa,cAAeO,MAAM,OAAOC,OAAO,OAAOC,IAAI,KAEpErB,GACG,qCACI,wBAAQV,QAASgB,EAAjB,0BACA,wBAAQhB,QAASyB,EAAjB,iC,wBCiCbO,EAvFM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACExD,mBAAS,IADX,mBAC3ByD,EAD2B,KACfC,EADe,OAER1D,mBAAS,IAFD,mBAE3B2D,EAF2B,KAEpBC,EAFoB,KAI5B9C,EAAQ,uCAAG,WAAOJ,GAAP,mBAAAK,EAAA,yDACbL,EAAEM,iBACE6B,EAAgB,GACD,KAAfY,EAHS,wBAKHI,EAAgBd,YAAIlD,EAAD,UAAoB2D,EAAQM,IAA5B,YAAmCC,gBALnD,SAMUC,YAAaH,EAAeJ,EAAY,YANlD,cAMHQ,EANG,gBAOaC,YAAeD,EAAKlB,KAPjC,OAOTF,EAPS,gCAUPsB,YAAOC,YAAWzE,EAAW,UAAW,CAC1CyC,KAAMuB,EACNU,UAAWC,cACXC,UAAWf,EAAQM,IACnBjB,kBAdS,QAgBbe,EAAS,IACTF,EAAc,IAjBD,4CAAH,sDAuDd,OACI,uBAAM5C,SAAUA,EAAhB,UACI,uBACID,MAAO8C,EACPlD,SAvCK,SAACC,GAAO,IACHG,EAAYH,EAAtBC,OAAUE,MAClB+C,EAAS/C,IAsCDO,KAAK,OACLC,YAAY,uBACZmD,UAAW,MAEf,uBACIpD,KAAK,OACLqD,OAAO,UACPhE,SA1CS,SAACC,GAAO,IAEnBgE,EADwBhE,EAAtBC,OAAUgE,MACI,GAChBC,EAAS,IAAIC,WAQnBD,EAAOE,UAAY,SAACC,GAAmB,IAEdC,EACjBD,EADAE,cAAiBD,OAErBtB,EAAcsB,IAUlBJ,EAAOM,cAAcR,MAmBjB,uBACItD,KAAK,SACLP,MAAM,UAET4C,GACG,gCACI,qBAAKN,IAAKM,EAAYL,MAAM,OAAOC,OAAO,SAC1C,wBAAQ9B,QAvBE,kBAAMmC,EAAc,KAuB9B,0BClDLyB,EA7BF,SAAC,GAAiB,IAAf3B,EAAc,EAAdA,QAAc,EACExD,mBAAS,IADX,mBACnBoF,EADmB,KACXC,EADW,KAc1B,OAXAC,qBAAU,WACN,IAAMC,EAAIC,YAAMpB,YAAWzE,EAAW,UAAW8F,YAAQ,YAAa,SACtEC,YAAWH,GAAG,SAACI,GACX,IAAMC,EAAaD,EAAcE,KAAKC,KAAI,SAAAnD,GAAG,oBACzCC,GAAID,EAAIC,IACLD,EAAIoD,WAEXV,EAAUO,QAEf,IAGC,qCACI,cAAC,EAAD,CAAcpC,QAASA,IACvB,8BACK4B,EAAOU,KAAI,SAAAnC,GAAK,OACb,cAAC,EAAD,CAEI3B,SAAU2B,EACV1B,QAAS0B,EAAMY,YAAcf,EAAQM,KAFhCH,EAAMf,aCgBpBoD,EAtCC,SAAC,GAA8B,IAA5BxC,EAA2B,EAA3BA,QAASyC,EAAkB,EAAlBA,YAClBC,EAAUC,cAD0B,EAEEnG,mBAASwD,EAAQ4C,aAFnB,mBAEnCC,EAFmC,KAEnBC,EAFmB,KAcpCxF,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAEM,iBACEwC,EAAQ4C,cAAgBC,EAFf,gCAGHE,YAAc9G,EAAY+G,YAAa,CAAEJ,YAAaC,IAHnD,OAITJ,IAJS,kDAAH,sDAQd,OACI,qCACI,uBAAMnF,SAAUA,EAAhB,UACI,uBACIM,KAAK,OACLX,SAnBC,SAACC,GAAO,IAEPG,EACVH,EADAC,OAAUE,MAEdyF,EAAkBzF,IAgBNQ,YAAY,eACZR,MAAOwF,IAEX,uBAAOjF,KAAK,SAASP,MAAM,sBAE/B,wBAAQU,QA7BM,WAClB9B,EAAYgH,UACZP,EAAQQ,KAAK,MA2BT,yBCpBGC,EAfI,SAAC,GAAiB,IAAfnD,EAAc,EAAdA,QAClB,OAAQ,+BACJ,6BACI,cAAC,IAAD,CAAMoD,GAAG,IAAT,oBAIJ,6BACI,eAAC,IAAD,CAAMA,GAAG,WAAT,UACKpD,EAAQ4C,YADb,0BCyBGS,EA7BG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYtD,EAA2B,EAA3BA,QAASyC,EAAkB,EAAlBA,YACtC,OACI,eAAC,IAAD,WAEKa,GAAc,cAAC,EAAD,CAAYtD,QAASA,IACpC,cAAC,IAAD,UACKsD,EACG,qCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMxD,QAASA,MAEnB,cAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAASxD,QAASA,EAASyC,YAAaA,MAE5C,cAAC,IAAD,CAAUgB,KAAK,IAAIL,GAAG,SAG1B,mCACI,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,cCmBbE,MAxCf,WAAgB,IAAD,EACWlH,oBAAS,GADpB,mBACNmH,EADM,KACAC,EADA,OAEiBpH,mBAAS,MAF1B,mBAENwD,EAFM,KAEG6D,EAFH,KAyBb,OArBA/B,qBAAU,WACRgC,YAAmB7H,GAAa,SAAC8H,GAE7BF,IADEE,GACS,CACTzD,IAAKyD,EAAKzD,IACVsC,YAAamB,EAAKnB,cAKtBgB,GAAQ,QAET,IAUD,mCAEGD,EACC,cAAC,EAAD,CACElB,YAZY,WAClB,IAAMsB,EAAO9H,EAAY+G,YACzBa,EAAW,CACTvD,IAAKyD,EAAKzD,IACVsC,YAAamB,EAAKnB,eASdU,WAAYU,QAAQhE,GACpBA,QAASA,IAEX,qBCnCRiE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.45d6f539.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\ninitializeApp(firebaseConfig);\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();","import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@firebase/auth';\nimport { authService } from 'fbase';\nimport { useState } from 'react';\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (e) => {\n        const {\n            target: { name, value }\n        } = e;\n        if (name === 'email') {\n            setEmail(value);\n        } else if (name === 'password') {\n            setPassword(value);\n        };\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (newAccount) {\n                await createUserWithEmailAndPassword(\n                    authService, email, password\n                );\n            } else {\n                await signInWithEmailAndPassword(\n                    authService, email, password\n                );\n            }\n        } catch (error) {\n            setError(error.errorMessage);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount(prev => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input\n                    name=\"email\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                />\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n                {error}\n            </form>\n            <span onClick={toggleAccount}>{newAccount ? \"Log In\" : \"Create Account\"}</span>\n        </>\n    );\n};\n\nexport default AuthForm;","import React from 'react';\nimport { authService } from 'fbase';\nimport {\n    GoogleAuthProvider,\n    GithubAuthProvider,\n    signInWithPopup\n} from \"firebase/auth\";\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n    let provider;\n    const onSocialClick = async (e) => {\n        const { target: { name } } = e;\n        if (name === 'google') {\n            provider = new GoogleAuthProvider();\n        } else if (name === 'github') {\n            provider = new GithubAuthProvider();\n        };\n        await signInWithPopup(authService, provider);\n        // provider.credentialFromResult(result);\n    };\n    return (\n        <div>\n            <AuthForm />\n            <div>\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\nimport { ref, deleteObject } from 'firebase/storage';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if (ok) {\n            await deleteDoc(doc(dbService, \"nweets\", nweetObj.id));\n            if (nweetObj.attachmentUrl !== \"\") {\n                await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n            }\n        }\n    };\n    const toggleEditing = () => setEditing(prev => !prev);\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        const nweetDoc = doc(dbService, \"nweets\", nweetObj.id);\n        await updateDoc(nweetDoc, {\n            text: newNweet\n        });\n        setEditing(false);\n    };\n    const onChange = (e) => {\n        const {\n            target: { value }\n        } = e;\n        setNewNweet(value);\n    }\n    return (\n        <div>\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your Nweet\"\n                            value={newNweet}\n                            onChange={onChange}\n                            required\n                        />\n                        <input type=\"submit\" value=\"Update Nweet\" />\n                    </form>\n                    <button onClick={toggleEditing}>Cancel</button>\n                </>\n            ) : (\n                <>\n                    <h4>\n                        {nweetObj.text}\n                    </h4>\n                    {nweetObj.attachmentUrl && (\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"\" />\n                    )}\n                    {isOwner && (\n                        <>\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\n                            <button onClick={toggleEditing}>Edit Nweet</button>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    )\n};\n\nexport default Nweet;","import { addDoc, collection, serverTimestamp } from \"@firebase/firestore\";\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\nimport { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst NweetFactory = ({ userObj }) => {\n    const [attachment, setAttachment] = useState(\"\");\n    const [nweet, setNweet] = useState(\"\");\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            // 스토리지와 레퍼런스 호출\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n            const resp = await uploadString(attachmentRef, attachment, \"data_url\");\n            attachmentUrl = await getDownloadURL(resp.ref);\n        }\n        // Nweet 텍스트 부분 저장\n        await addDoc(collection(dbService, \"nweets\"), {\n            text: nweet,\n            createdAt: serverTimestamp(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (e) => {\n        const { target: { value } } = e;\n        setNweet(value);\n    };\n\n    const onFileChange = (e) => {\n        const { target: { files } } = e;\n        const theFile = files[0]; // multiple에 대비하기 위해 리스트 형태임\n        const reader = new FileReader(); // Browser API        \n        /*\n        onloadend\n        readAsDataURL 함수에 전달할 인자,\n        즉, 파일이 함수로 들어간 이후 결과값이 나온 다음 상황을 감지함\n        그 때 생긴 이벤트값을 사용할 수 있게 해 줌.\n        이벤트 값에는 우리가 원하는 파일 URL이 있음.\n         */\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result }\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        /*\n        readAsDataURL\n        파일 정보를 인자로 받아서 파일 위치를 URL로 반환해 줌.\n        단순히 호출하는 방식으로는 사용할 수 없음\n        리액트 생명주기 함수처럼 파일 선택 후,\n        '웹 브라우저가 파일을 인식하는 시점', '웹 브라우저 파일 인식이 끝난 시점' 등을 포함.\n        시점까지 함께 관리해 줘야 URL을 얻을 수 있음.\n         */\n        reader.readAsDataURL(theFile);\n    };\n\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input\n                value={nweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n            />\n            <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n            />\n            <input\n                type=\"submit\"\n                value=\"Nweet\"\n            />\n            {attachment && (\n                <div>\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\n                    <button onClick={onClearAttachment}>Clear</button>\n                </div>\n            )}\n        </form>\n    );\n};\n\nexport default NweetFactory;","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fbase';\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        const q = query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\"));\n        onSnapshot(q, (querySnapshot) => {\n            const nweetArray = querySnapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setNweets(nweetArray);\n        });\n    }, []);\n\n    return (\n        <>\n            <NweetFactory userObj={userObj} />\n            <div>\n                {nweets.map(nweet => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </>\n    );\n};\nexport default Home;","import { authService } from 'fbase';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { updateProfile } from 'firebase/auth';\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const onChange = (e) => {\n        const {\n            target: { value }\n        } = e;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await updateProfile(authService.currentUser, { displayName: newDisplayName });\n            refreshUser();\n        };\n\n    };\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input\n                    type=\"text\"\n                    onChange={onChange}\n                    placeholder=\"Display Name\"\n                    value={newDisplayName}\n                />\n                <input type=\"submit\" value=\"Update Profile\" />\n            </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n};\n\nexport default Profile;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = ({ userObj }) => {\n    return (<ul>\n        <li>\n            <Link to=\"/\">\n                Home\n            </Link>\n        </li>\n        <li>\n            <Link to=\"/profile\">\n                {userObj.displayName}의 Profile\n            </Link>\n        </li>\n    </ul>)\n};\n\nexport default Navigation;","import React from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n    return (\n        <Router>\n            {/* isLoggedIn이 true여야 Navigation이 마운트 됨 */}\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\" />\n                    </>\n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    </>\n                )\n                }\n            </Switch>\n        </Router>\n    )\n};\n\nexport default AppRouter;\n","import AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false); // 유저 로그인 로드를 기다리기 위한 flag\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true); // 유저 로그인 되면 set true\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName\n    });\n  };\n  return (\n    <>\n      {/* 유저 로그인이 확인 되면 isLoggedIn을 true로 하고 그 전까지는 문구만 출력 */}\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj} />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}